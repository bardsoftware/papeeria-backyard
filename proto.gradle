import java.text.SimpleDateFormat

def read_versions() {
    def props = new Properties()
    props.load(new FileInputStream("${System.getenv("REPO_HOME")}/versions.properties"))
    return props
}

def papeeriaVersion(String defaultVersion) {
    def versions = read_versions()
    if (project.hasProperty("ver")) {
        return project["ver"]
    }
    if (versions["papeeria"] != null && !String.valueOf(versions["papeeria"]).isAllWhitespace()) {
        return versions["papeeria"]
    }
    return defaultVersion
}

def this_version = papeeriaVersion(new SimpleDateFormat("yyyy.MM.dd").format(new Date()))

buildscript {
    ext {
        grpc_version = "1.36.0"
        kotlin_version = "1.5.0"
    }
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.+'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'com.google.protobuf'
apply plugin: 'maven-publish'

sourceCompatibility = "1.8"
targetCompatibility = "1.8"

repositories {
    mavenLocal()
    mavenCentral()
}

sourceSets {
    main {
        proto {
        }
        java {
            srcDirs "$projectDir/src/generated/main/java"
        }
        kotlin {
            srcDirs "$projectDir/src/main/kotlin"
            include "com/bardsoftware/papeeria/backend/SSL.kt"
        }
    }
}

dependencies {
    api "com.google.cloud:google-cloud-core:1.92.+"
    api "com.google.cloud:google-cloud-secretmanager:1.4.+"

    implementation 'com.google.protobuf:protobuf-java:3.12.4'
    implementation "io.grpc:grpc-protobuf:$grpc_version"
    api "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    api 'org.slf4j:slf4j-api:1.7.30'
}

protobuf {
    protoc {
        artifact = 'com.google.protobuf:protoc:3.+'
        generatedFilesBaseDir = "$projectDir/src/generated"
    }
    plugins {
        grpc {
            artifact = 'io.grpc:protoc-gen-grpc-java:1.+'
        }
    }
    generateProtoTasks {
        all()*.plugins {
            grpc {}
        }
    }
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

jar {
    from sourceSets.main.output
    from sourceSets.main.allSource
    include "com/bardsoftware/papeeria/backend/FileProcessingBackend*"
    include "com/bardsoftware/papeeria/backend/SSL*"
    include "**/*.proto"
}

group 'com.bardsoftware.papeeria.backend'
version "$this_version"

publishing {
    repositories {
        maven {
            name "papeeria-maven"
            url "gcs://papeeria-maven-repo/maven2"
        }
    }
    publications {
        libbackyardApi(MavenPublication) {
            artifactId = 'libbackyard-proto'
            from components.java
        }
    }
}

publishToMavenLocal.doLast {
    println("Published version $this_version")
}
