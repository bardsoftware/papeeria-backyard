buildscript {
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.+'
    }
}

plugins {
    id "org.jetbrains.kotlin.jvm" version "1.3.61"
}

apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'com.google.protobuf'
apply plugin: 'maven-publish'

repositories {
    mavenCentral()
    jcenter()
}

configurations {
    exportedClasspath
    libprotoImplementation
    libprotoExported
}

dependencies {
    libprotoImplementation 'com.google.protobuf:protobuf-java:3.+'
    libprotoImplementation "io.grpc:grpc-protobuf:$grpc_version"
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    compile 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.1.+'
    compile "com.xenomachina:kotlin-argparser:2.+"
    compile "com.google.cloud:google-cloud-core:1.+"
    compile "com.google.cloud:google-cloud-pubsub:1.+"
    compile 'com.google.guava:guava:28.+'

    compile 'com.github.kittinunf.fuel:fuel:2.+'
    compile 'com.github.kittinunf.fuel:fuel-coroutines:2.+'
    compile "com.spotify:docker-client:8.+"
    compile 'com.zaxxer:HikariCP:2.7.+'
    compile 'org.postgresql:postgresql:42.1.1'
    compile 'org.slf4j:slf4j-api:1.7.+'
    compile 'ch.qos.logback:logback-classic:1.2.+'
    compile 'ch.qos.logback:logback-core:1.2.+'
    compile "io.grpc:grpc-core:$grpc_version"
    compile "io.grpc:grpc-stub:$grpc_version"
    compile "io.grpc:grpc-netty:$grpc_version"
    compile "io.grpc:grpc-netty-shaded:$grpc_version"
    compile "io.netty:netty-tcnative-boringssl-static:2.0.28.Final"

    compile configurations.libprotoImplementation
    exportedClasspath configurations.compileClasspath

    testCompile configurations.compile
    testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.+'
}

sourceSets {
    main {
        proto {
        }
        java {
            srcDirs "$projectDir/src/generated/main/java", "$projectDir/src/generated/main/grpc"
        }
    }
    libproto {
        java {
            srcDirs "$projectDir/src/generated/main/java"
        }
    }
}

protobuf {
    protoc {
        artifact = 'com.google.protobuf:protoc:3.+'
        generatedFilesBaseDir = "$projectDir/src/generated"
    }
    plugins {
        grpc {
            artifact = 'io.grpc:protoc-gen-grpc-java:1.+'
        }
    }
    generateProtoTasks {
        all()*.plugins {
            grpc {}
        }
    }
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileKotlin.dependsOn += ["generateProto"]

mainClassName = 'com.bardsoftware.papeeria.backend.demo.HashCalculatorBackendKt'

run {
    jvmArgs '-Dkotlinx.coroutines.debug'
}

jar {
    exclude "com/bardsoftware/papeeria/backend/demo/**"
}

task libproto(type: Jar) {
    dependsOn = ["compileLibprotoJava"]
    from sourceSets.libproto.output.classesDirs
    archiveName = "libbackyard-proto-${version}.jar"
    destinationDir = file("$buildDir/libs")
}
task libprotoSource(type: Jar) {
    classifier 'sources'
    from sourceSets.libproto.allJava
    from sourceSets.main.proto
}

artifacts {
    exportedClasspath jar
    libprotoExported libproto
}

group 'com.bardsoftware.papeeria.backend'
version "SNAPSHOT"

publishing {
    repositories {
        maven {
            name "papeeria-maven"
            url "gcs://papeeria-maven-repo/maven2"
        }
    }
    publications {
        mavenLibbackyardProto(MavenPublication) {
            artifactId = 'libbackyard-proto'
            artifact libproto
            artifact libprotoSource
        }
    }
}

test {
    useJUnitPlatform()
    testLogging {
        exceptionFormat = 'full'
    }
}
